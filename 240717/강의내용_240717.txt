변수를 생성한다는 것은 => 컴퓨터 cpu 가상메모리 공간 사용!!!

변수 => 전역x / 지역x

bootstrap > 프레임워크
=> html, css => 레이아웃 구조!!!
=> 절대로 html, css, js 포폴

*react.js + bootstrap

*jQuery / Slick Slider => 라이브러리
=> 공통적으로 사용하는 웹 표준 문법을 기반으로 그 위에 각자의 라이브러리의 고유한 특성을 가지고 있는 문법을 더할 뿐
=> React.js

*bootstrap => 프레임워크
=> 천지창조 // 완전한 독자적인 문법 체계 및 질서
=> vue.js // Angluar.js

12개의 컬럼으로 나눈다
> 10과 가까운 숫자가운데서 최대공약수가 가장 많은 숫자

*Grid는 flex와 정말 중요하게 많이 사용되는 레이아웃 시스템 중 하나!!!

grid < flex
> 사용되는 용어가 비슷함

grid : 명확하게 행.열이 정해진 상황에서 사용!!!
> 행.열에 대한 정렬이 완전 깨짐!!!

flex의 경우, 부모요소 d:f적용하는 순간 => 자식요소들은 flex 박스에 영향을 받음!!!!

부모 d:g



display: grid

grid-template-colums : 열을 몇 개
grid-template-rows: 행을 몇 개
> grid : 행 몇 개 / 열 몇 개

grid-row-gap : 행 사이의 간격
grid-column-gap : 열 사이의 간격
> grid-gap : 행 간격 열 간격

justify-items : 이미 여러개 열을 나눠진 각 자식요소의 아이템들의 수평 정렬 세팅
> start / center / end / stretch

align-items : 이미 여러개 열을 나눠진 각 자식요소의 아이템들의 수직 정렬 세팅
> start / center / end / stretch

justify-content : 이미 여러개 열로 나눠진 각 자식요소를 하나의 컨텐츠로 인식
> start / center / end
> space-between
> space-around
> space-evenly

1fr / auto
=> 평소에는 거의 동일한 개념으로 사용
=> column / row를 나누고자 할 때 1/n

*각각의 개별 아이템을 하나로 묶어서 content로 사용하고자 할 때, 차이점!!!!
auto의 경우, 개별 아이템에 원래 적용되어있던 너비값을 식별해서 사용!!!!
1fr의 경우, 개별 아이템의 너비보다 부모요소의 전체 너비 중 1/n 값을 우선 적용!!!!

align-content : 각 개별 아이템들을 하나의 content로 식별해서 수직 정렬을 주고 할 때 사용 (*start / center / end)
> space-between
> space-around
> space-evenly

justify-self & align-self : 부모가 아닌 자식요소에 적용할 수 있는 grid 문법 => 부모 요소의 정렬보다 우선적인 적용!!!
> start / center / end / stretch

--------------------------------------------------

그리드 레이아웃 시스템 정렬 기준 : 라인 카운트!!!
> 자식요소!!!! 라인 카운트

열을 기준으로 병합하고자 할 때, 
grid-column-start: 열이 시작될 라인 넘버
grid-column-end: 열이 끝날 무렵의 라인 넘버
> grid-column : 시작 라인 넘버/종료 라인 넘버
> grid-column : 시작 라인 넘버/span 공간수

- F/E

- WD

- PB

- UI/UX


상업적인 서비스 웹.앱 페이지 완성

1.대표이사 > CTO
: 매출 / 경쟁업체

2.CTO > 프로젝트 > 리뉴얼 : 3년
- TFT
- UI/UX & MKT
> 우리의 서비스를 기존 사용 사용자
> 나이 / 성별 / 트랜드 / 취향 / SNS 등등 : 수도권 2030여성 / 직장인여성
> 경쟁업체 / 컬러 / 
> UI/UX 기획

1.문제인식 :
- 매출증대
- 충성고객확보
- 사용자 서비스 편의개선

2.벤치마킹 

3.가설설정

- Segment (공동체그룹) : 기혼 VS 미혼 | 산업 카테고리 | 기혼 자녀유 VS 자녀무
- 우선순위 28세 / 미혼 / 사무직 여성
- Persona (월요일 아침 기상, 몇시에 출근 / 인터넷 / 마라탕 / 요가 / 9시 / 11시 => 주말 삶)

4.가설검증

- User Research
1) Primary Research = Field Research
- 우리의 페르소나라고 판단되어지는 대상을 타겟으로 직접 리서치
- FGI 테스트 / Focus Group Interview

2) Secondary Research = Desk Research
- 구글링
- 논문검색
- 기사
- 앱 리뷰 / 제품 리뷰 / 블로그

=> 통계청 / 네이버 데이터랩 / 네이버 광고센터 / SKT LAB
*카드회사
*통신사

- 인터뷰
> 페르소나 => 목적 / 인터뷰응한이유 / 녹취

- Journey Map
> 페르소나 => 서비스 => 접속 => 로그인 / 서칭 / 결제 / 장바구니 / 튕

UX : User Experience

------------------------------------------------------------------------------------

본격적인 UI 작업

1) UX/UI 기획자 기획 (*프론트엔드 개발자)

2) 웹디자이너 
- 2d 요소 정적인 디자인 이미지 제작

3) 웹퍼블리셔
- 디자이너 작업물 => 웹 출력

4) 프론트엔드개발자
- 클릭 / 오버 / 로그인 등등 액션 => 동적인 기능
- API 화면 출력

5) 백엔드개발자
- DB 구조화 / 사용자 요청 => 응답 (*효율적인 서버 구축)

코딩 > 개발 착수!!!



UI  User Interface



















