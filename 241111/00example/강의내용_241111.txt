자료구조 
> 자료구조 정의 : 자료를 어떻게 구조화할 것인가? 정의
> 수업 자료구조 > 변수를 사용 // 배열을 사용

알고리즘
> 알고리즘 정의 : 어떤 문제를 해결하기위한 방법/솔루션

*어떤 자료구조를 선택하는가에 따라서 무조건 이에 따른 알고리즘 반드시 변경 채택될 수 밖에 없음!!!

효율적인 코드 작성!!!
얼마나 더 효율적일 수 있는가?

주관적!!!
10명의 개발자 모두 배열 & 반복문
> 안정적으로 데이터를 구현 // 유지
> 신속 데이터를 확장

일반적 = 대중적!!!
대부분의 기업 & 서비스 (*B2C)
> 신속 & 정확하게 데이터 확장 & 제거 & 편집

"시간복잡도" 개념 : 어떤 특정 알고리즘을 활용해서 문제를 해결하는데 걸리는 시간

어떻게 계산?

O(n2 + n) = O(n2)
> 가장 시간을 많이 잡아먹는 비효율적인 부분만 직접 비교!!

Python
C언어
> 자료구조 & 알고리즘
> C / Java / Python
> Javascript

자료구조 : 자료를 어떻게 구조화할 것인가?

알고리즘

시간복잡도

프로그래밍 영역 시간을 가장 잡아먹는 // 메모리공간을 가장 비효율적으로 사용할 수 있도록 만들 확률이 가장 높은 요소!!!
<-> 가장 효율적으로 만들 수도 있다!!!

"반복문" > 이터러블 객체 > 배열

배열 형태의 자료구조 어떻게 되어있는가?
혹은 이 배열이라는 자료구조보다 더 효율적인 자료구조를 사용한다면?

선언형 // 명령형

지금 내가 이해가 안되는 것은 지극히 정상!!!
> 조금만 노력해보자!!

devops // cloud Engineer + AI 

1.자료구조
2.알고리즘
3.시간복잡도
- 빅오메가
- 빅세타
- 빅오
4.반복문 // 배열
5.배열
- 장점 : 값 타입 // 사이즈 // 참조타입
- 단점 : 최초 배열 정의 // 수정.편집 매우 비효율적
6.연결리스트
- 장점 : head // next
- 단점 : 최초 값을 찾아오는 것과 무관 // 초기 로딩 x
- 추상자료형 기능 함수 7개

--------------------------------------

stack 형태의 추상자료형 함수 구현

- 무언가를 쌓아올리다. 의미!!
- 엘리베이터 앞에서 사람들이 줄을서서 기다리는 형태
- 설거지 

- 특징 : 입구.출구가 동일한 특징
- 포토샵 // 피그마

배열 

연결리스트의 스택 추상자료형 함수 기능 4개를 구현
- push( ) : 연결리스트 데이터 삽입
- poo( ) : 연결리스트 데이터 제거
- peek( ) : 연결리스트 데이터 참조
- isEmpty( ) : 해당 연결리스트가 비어있는지 여부를 체크




