1.자료형
- 문자 / 숫자 / 논리 / 배열 / 객체
- 논리 : null // undefined
- null : 유효하지 않은 값
- undefined : 아직 정의가 되지 않은 값
- 자료형변환 :
1) json 혹은 parameter를 거쳤다가 돌아오는 값 : 문자열
2) 숫자 + 문자 => 문자!!!

2.연산자
- 병합연산자 : (좌항 ?? 우항) => 좌항 값이 존재하면, 좌항값을 출력 // 만약 좌항값이 존재하지 않으면, 우항의 값을 찾아온다!!!
- 삼항조건연산자
- switch & case // 종결문 (*break // return)

3.객체 = Object
- 빈 객체 // 온점표기법 & 대괄호표기법
- 구조분해할당
- 객체의 값을 반복실행하고자 할 때 : Object.keys => 배열 변환!!!!

4.배열
- 인덱스 = 0부터 // length 속성
- 모든 배열 내 마지막 element = 아이템 인덱스 === length - 1
- push, pop, shift, unshift, slice, concat, join, find, indexOf, filter, map, sort, reduce

- push : 특정 배열의 맨끝 부분의 값을 추가하고, 추가된 이후의 새로운 배열의 총 개수를 반환하는 메서드 함수!

- pop : 특정 배열에 맨끝 부분의 값을 제거하고, 제거된 값을 반환!

- unshift : 특정 배열의 맨 앞 부분의 값을 추가하고, 추가된 이후의 새로운 배열의 총 개수를 반환하는 메서드 함수!

- shift : 특정 배열에 맨앞 부분의 값을 제거하고, 제거된 값을 반환!

- slice : 기존 배열에서 특정 범위를 잘라서 "새로운 배열"을 반환!!!
> 인자값 2개 => 첫번째 인자(*인덱스)부터 두번째 인자(*인덱스)이전까지의 값을 잘라서 새로운 배열 반환!!
> 인자값 1개 => 해당 인자(*인덱스)부터 끝까지 잘라내기!

- concat : 서로 다른 복수의 배열을 하나로 합쳐주도록하는 메서드 함수

- indexOf : 인자값으로 들어온 아이템의 인덱스 값을 찾아주는 메서드 함수

- includes : 특정 배열에 특정 요소가 있는지 판별 // true, false

- find : 특정 배열에서 찾고자 하는 값을 찾아서 해당 값을 반환

- filter : 특정 배열에서 어떤 조건에 만족하는 아이템 요소들만 모아서 하나의 새로운 배열로 반환시켜주는 메서드 함수

- map : 특정 배열 내 아이템들에게 어떤 연산 및 실행문 처리 후 새로운 배열로 반환시켜주는 함수

- sort : 특정 배열 내 값을 정렬하고자 할 때 사용하는 메서드 함수

- join : 특정 배열 내 요소들을 하나의 문자열로 변환시켜주는 메서드 함수 (*구분자)

- reduce : 특정 배열 내 요소들을 순회하면서 값을 찾아서 누적계산해주는 함수

5.단락회로평가
- 좌항 && 우항 : 좌항부터 값을 체크하는데, 좌항의 값이 true아닌 false의 값을 반환한다면, 우항의 값은 실행하지 x
- 좌항 || 우항 : 비록 좌항의 값이 false를 반환하지만, 만약 우항의 값이 true라면, 좌항의 반환값과 상관없이 우항의 값을 실행o

6.스프레드 연산자 = 전개 연산자
- 객체 및 배열의 값을 병합하고자 할 때, 전개 연산자가 하는 역할 => 객체 및 배열 내 각각의 아이템 요소들을 독립적인 값을 풀어서 가져가는 역할 => 참조타입 형식의 자료역시 값을 분리시킬 수 있었던 것이다!!!!

useState
useRef
useEffect
useMemo
useReducer
useContext
useParams



