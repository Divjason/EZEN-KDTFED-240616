npm i styled-components
npm i @types/styled-components -D

npm i react-router-dom
npm i @types/react-router-dom -D

npm i @tanstack/react-query
npm i recoil
npm i react-hook-form


npx create-react-app . --template typescript
*2개
- "나이" : 상대적인 것 (*많고 적음 // 무한비교 x)
- 본인의 나이 때문에 너무 스트레스 받지 말라!!!
- 하지만, 현실 => 나이 영향
- 직장 여자 1살 적은 여성 // 사수 사원 // 대리
- 포트폴리오 => 제출
- 50명 // 3명 : 24살 || 32살 (*압살) || 27살
- 신입사원 <-> 사수 (26살)
- 팀장 & 대표
- 최근 신입사원 (*200 : 1)
- 60% 퇴사율 => 워라벨 // 고기잡이 선원 // 초봉 // 공부 // 미션 // 마감기한 // 살아야하는 게 맞을까?
=> 내가 생각했던 개발자?
=> 1년차 // 신입 => 넘사
=> 소주!!! => 내가 여기 있는게 맞을까? // 잉여? 내 실력 뽀록 // 나 실력 ? // 내가 적성에 맞는걸까?

--------------------------------------

개발자 완벽주의 증후군
- 완벽 // 완벽 추구 // 달성
- 실력 => 계단식x
- 굉장히 인정받고 시작
- 처음에는 인상깊지 않았던 친구 => 오래

어디든 갈 수 있음
- 탑티어!!!
- 분명 30대 중반까지 나를 원하는 곳이 있음 (*중소 & 중견 & 스타트업)

야학!!!
공부를 많이 한 사람들이 와서 봉사활동
카이스트 학부생 => 교수 => 배제대학교 전산통합시스템학과 (*4년제)

나이!!!
> 40대 새로운 학문 공부
> 과연? 이 분의 가족!! // 이 분 행복?
> 가족x
> 분명 가족 지인 반대 < 내가 이 분야를 공부하는 좋아하는 마음

억지로 학습 
내가 지금 진짜 만들어보고 싶은 제품!!!
실력 // 기술 // 재능!! < 나이
실력 // 기술 // 재능!! < AI

Recoil : 전역 상태 관리 라이브러리
- atom (*함수)

- useRecoilValue : atom 함수 안에서 관리하고 있는 상태 관리 value를 찾아와주는 역할

- useSetRecoilState : atom 함수 안에서 관리하고 있는 상태 value를 편집해주는 역할

- useRecoilState : useRecoilValue + useSetRecoilState 기능을 합쳐놓은 역할 => useState

현재까지는 관리해야할 state가 1개면 충분했습니다!!!

1.사용자가 input태그에 입력한 값을 관리하는 정도로만 충분!!!

category : ToDo // Doing // Done
id
text

1) 바꾸고 싶은 컨텐츠가 누구냐? id
2) 바꾸고 싶은 카테고리가 어디냐? click 이벤트
3) 기존 있었던 카테고리는 어디냐?


1.애초에는 무의 값

2.사용자가 값을 입력
- 배열 > 객체

3.초기값
- 배열 > 객체 > 카테고리 : toDo

4.업데이트 상황
- 이벤트 실행 : toDo => Doing
- 애초에 값이 저장 state값이 변경되어야 한다는 사실

5.UI에게 새롭게 데이터가 업데이트가 되었다는 사실 재알림
- selector

enum
id
text

카테고리가 정의되는 최초의 타입 string 
"TODO" | "DOING" | "DONE"
string

2번째~3번째 : 프로필
> 전공 // 과외 활동 // 기관 인증 // 자격증
> 국비수업 언급 x || O
> K-Digital Training (KDT) 기업연계 프론트엔드 개발 수료












